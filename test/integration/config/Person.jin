[People]
model      = Person
mapsTo     = people
convention = Flourish
ordering   = {
	"lastName"  : "asc",
	"firstName" : "asc"
}

[Person]
identity   = id
uniqueOn   = [
	["team", "teamRank"]
]

	[Person.fields.id]
	type      = integer
	generator = native
	mapsTo    = id

	[Person.fields.firstName]
	type     = string
	nullable = FALSE
	mapsTo   = first_name

	[Person.fields.lastName]
	type     = string
	nullable = TRUE
	mapsTo   = last_name

	; Example of one-to-many

	[Person.fields.emailAddresses]
	type   = hasMany
	target = EmailAddress
	unique = TRUE
	order  = {
		"priority" : "asc"
	}
	route  = {
		"id" : "person"
	}

	; Example of many-to-one

	[Person.fields.team]
	type    = hasOne
	target  = Team
	default = {
		"name ==": "Interns"
	}
	route   = {
		"team" : "id"
	}

	[Person.fields.teamRank]
	type    = integer
	default = NULL
	mapsTo  = team_rank

	; Example of one-to-one

	[Person.fields.user]
	type   = hasOne
	target = User
	unique = TRUE
	route  = {
		"id" : "person"
	}

	[Person.fields.authLevel]
	type    = string
	target  = user.authLevel

	; Example of many-to-many

	[Person.fields.groups]
	type    = hasMany
	target  = Group
	default = {
		"default ==": TRUE
	}
	route   = {
		"user_groups" : {
			"id"    : "user",
			"group" : "id"
		}
	}
